// version
def versionMajor = 0
def versionMinor = 2
def versionPatch = 0
def versionBuild = 0

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply from: '../config/quality.gradle'

/*
+ * Gets the version name from the latest Git tag
+ */
def getVersionName = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}


android {
    compileSdkVersion targetSDKVersion
    buildToolsVersion buildToolVersion

    defaultConfig {
        applicationId "com.netspace.crm.android"
        minSdkVersion minSDKVersion
        targetSdkVersion targetSDKVersion
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch + versionBuild
        versionName getVersionName()
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }
    buildTypes {

        debug {
            buildConfigField 'boolean', 'FABRIC_ENABLED', 'false'
        }

        debugFabric {
            buildConfigField 'boolean', 'FABRIC_ENABLED', 'true'
            signingConfig signingConfigs.debug
        }

        beta {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'FABRIC_ENABLED', 'true'
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField 'boolean', 'FABRIC_ENABLED', 'true'
        }
    }
    productFlavors {
        develop {
            buildConfigField 'String', 'URL', "\"http://78.46.37.57:7010/api\""
        }
        production {
            buildConfigField 'String', 'URL', "\"http://78.46.37.57:7010/api\""
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:' + supportLibraryVersion
    // injection libraries
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile 'com.google.dagger:dagger:2.0.1'
    apt 'com.google.dagger:dagger-compiler:2.0.1'
    provided 'pl.mg6.hrisey:hrisey:0.3.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    // network
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    // database
    compile 'de.greenrobot:greendao:1.3.7'
    // crashlytics
    compile('com.crashlytics.sdk.android:crashlytics:2.4.0@aar') {
        transitive = true;
    }
    //eventBus
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.google.code.gson:gson:2.4'
    //espresso test
    androidTestCompile 'com.android.support.test:runner:0.3'
    androidTestCompile 'com.android.support.test:rules:0.3'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'
    androidTestCompile('com.android.support.test.espresso:espresso-contrib:2.2') {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude module: 'recyclerview-v7'
    }
}

